apiVersion: charts.flagsmith.com/v1alpha1
kind: Flagsmith
metadata:
  name: flagsmith-sample
spec:
  # Default values copied from <project_dir>/helm-charts/flagsmith/values.yaml
  api: {}
  frontend: {}
  #   affinity: {}
  #   env:
  #   - name: DJANGO_ALLOWED_HOSTS
  #     value: '*'
  #   image:
  #     imagePullPolicy: IfNotPresent
  #     imagePullSecrets: []
  #     repository: flagsmith/flagsmith-api
  #     tag: latest
  #   livenessProbe:
  #     failureThreshold: 5
  #     initialDelaySeconds: 50
  #     periodSeconds: 10
  #     successThreshold: 1
  #     timeoutSeconds: 2
  #   nodeSelector: {}
  #   podAnnotations: {}
  #   podLables: {}
  #   readinessProbe:
  #     failureThreshold: 10
  #     initialDelaySeconds: 50
  #     periodSeconds: 10
  #     successThreshold: 1
  #     timeoutSeconds: 2
  #   replicacount: 1
  #   resouces: {}
  #   tolerations: []
  # frontend:
  #   affinity: {}
  #   enabled: true
  #   image:
  #     imagePullPolicy: IfNotPresent
  #     imagePullSecrets: []
  #     repository: flagsmith/flagsmith-frontend
  #     tag: test
  #   livenessProbe:
  #     failureThreshold: 20
  #     initialDelaySeconds: 20
  #     periodSeconds: 10
  #     successThreshold: 1
  #     timeoutSeconds: 10
  #   nodeSelector: {}
  #   readinessProbe:
  #     failureThreshold: 20
  #     initialDelaySeconds: 20
  #     periodSeconds: 10
  #     successThreshold: 1
  #     timeoutSeconds: 10
  #   replicacount: 1
  #   resouces: {}
  #   tolerations: []
  # hooks:
  #   enabled: false
  #   removeOnSuccess: true
  # influxdb:
  #   adminUser:
  #     bucket: default
  #     organization: influxdata
  #     password: ""
  #     token: ""
  #     user: admin
  #   affinity: {}
  #   image:
  #     imagePullPolicy: IfNotPresent
  #     imagePullSecrets: []
  #     repository: quay.io/influxdb/influxdb
  #     tag: v2.0.2
  #   nameOverride: influxdb
  #   nodeSelector: {}
  #   persistence:
  #     enabled: false
  #   resources: {}
  #   tolerations: []
  # metrics:
  #   enabled: false
  # # postgresql:
  # #   enabled: true
  # #   extraEnv: []
  # #   global:
  # #     postgresql: {}
  # #   image:
  # #     debug: false
  # #     pullPolicy: IfNotPresent
  # #     registry: docker.io
  # #     repository: bitnami/postgresql
  # #     tag: 11.7.0-debian-10-r9
  # #   ldap:
  # #     baseDN: ""
  # #     bindDN: ""
  # #     enabled: false
  # #     port: ""
  # #     prefix: ""
  # #     scheme: ""
  # #     search_attr: ""
  # #     search_filter: ""
  # #     server: ""
  # #     suffix: ""
  # #     tls: false
  # #     url: ""
  # #   livenessProbe:
  # #     enabled: true
  # #     failureThreshold: 6
  # #     initialDelaySeconds: 30
  # #     periodSeconds: 10
  # #     successThreshold: 1
  # #     timeoutSeconds: 5
  # #   master:
  # #     affinity: {}
  # #     annotations: {}
  # #     extraInitContainers: |
  # #       # - name: do-something
  # #       #   image: busybox
  # #       #   command: ['do', 'something']
  # #     extraVolumeMounts: []
  # #     extraVolumes: []
  # #     labels: {}
  # #     nodeSelector: {}
  # #     podAnnotations: {}
  # #     podLabels: {}
  # #     priorityClassName: ""
  # #     sidecars: []
  # #     tolerations: []
  # #   metrics:
  # #     enabled: false
  # #     image:
  # #       pullPolicy: IfNotPresent
  # #       registry: docker.io
  # #       repository: bitnami/postgres-exporter
  # #       tag: 0.8.0-debian-10-r28
  # #     livenessProbe:
  # #       enabled: true
  # #       failureThreshold: 6
  # #       initialDelaySeconds: 5
  # #       periodSeconds: 10
  # #       successThreshold: 1
  # #       timeoutSeconds: 5
  # #     prometheusRule:
  # #       additionalLabels: {}
  # #       enabled: false
  # #       namespace: ""
  # #       rules: []
  # #     readinessProbe:
  # #       enabled: true
  # #       failureThreshold: 6
  # #       initialDelaySeconds: 5
  # #       periodSeconds: 10
  # #       successThreshold: 1
  # #       timeoutSeconds: 5
  # #     securityContext:
  # #       enabled: false
  # #       runAsUser: 1001
  # #     service:
  # #       annotations:
  # #         prometheus.io/port: "9187"
  # #         prometheus.io/scrape: "true"
  # #       type: ClusterIP
  # #     serviceMonitor:
  # #       additionalLabels: {}
  # #       enabled: false
  # #   nameOverride: flagsmith-postgresql
  # #   networkPolicy:
  # #     allowExternal: true
  # #     enabled: false
  # #   persistence:
  # #     accessModes:
  # #     - ReadWriteOnce
  # #     annotations: {}
  # #     enabled: true
  # #     mountPath: /bitnami/postgresql
  # #     size: 8Gi
  # #     subPath: ""
  # #   postgresqlDataDir: /bitnami/postgresql/data
  # #   postgresqlDatabase: flagsmith
  # #   postgresqlPassword: flagsmith
  # #   postgresqlUsername: postgres
  # #   securityContext:
  # #     enabled: false
  # #     fsGroup: "0"
  # #   readinessProbe:
  # #     enabled: true
  # #     failureThreshold: 6
  # #     initialDelaySeconds: 5
  # #     periodSeconds: 10
  # #     successThreshold: 1
  # #     timeoutSeconds: 5
  # #   replication:
  # #     applicationName: my_application
  # #     enabled: false
  # #     numSynchronousReplicas: 0
  # #     password: repl_password
  # #     slaveReplicas: 1
  # #     synchronousCommit: "off"
  # #     user: repl_user
  # #   resources:
  # #     requests:
  # #       cpu: 250m
  # #       memory: 256Mi
  # #   # securityContext:
  # #   #   enabled: true
  # #   #   fsGroup: 1001
  # #   #   runAsUser: 1001
  # #   service:
  # #     annotations: {}
  # #     port: 5432
  # #     type: ClusterIP
  # #   serviceAccount:
  # #     enabled: true
  # #   shmVolume:
  # #     chmod:
  # #       enabled: true
  # #     enabled: true
  # #   slave:
  # #     affinity: {}
  # #     annotations: {}
  # #     extraInitContainers: |
  # #       # - name: do-something
  # #       #   image: busybox
  # #       #   command: ['do', 'something']
  # #     extraVolumeMounts: []
  # #     extraVolumes: []
  # #     labels: {}
  # #     nodeSelector: {}
  # #     podAnnotations: {}
  # #     podLabels: {}
  # #     priorityClassName: ""
  # #     sidecars: []
  # #     tolerations: []
  # #   updateStrategy:
  # #     type: RollingUpdate
  # #   volumePermissions:
  # #     enabled: false
  # #     image:
  # #       pullPolicy: Always
  # #       registry: docker.io
  # #       repository: bitnami/minideb
  # #       tag: buster
  # #     securityContext:
  # #       runAsUser:"auto"
  # service:
  #   api:
  #     port: 8000
  #     type: ClusterIP
  #   frontend:
  #     port: 8080
  #     type: ClusterIP
  #   influxdb:
  #     externalPort: 8080
  # openshift: true
